[
    {
        "type": "message",
        "user": "U043951H9",
        "text": "hey <@U040MK408>, qq for you if you\u2019re free :slightly_smiling_face:",
        "ts": "1464767660.002210"
    },
    {
        "type": "message",
        "user": "U040MK408",
        "text": "shoot",
        "ts": "1464767668.002211"
    },
    {
        "type": "message",
        "user": "U043951H9",
        "text": "```\nparticipants: computed('id', function() {  \n   return this.store.query('participant', { an_id: get(this, 'id') });\n})\n```",
        "ts": "1464767702.002212"
    },
    {
        "type": "message",
        "user": "U043951H9",
        "text": "what type of issues (if any could arise from this)",
        "ts": "1464767715.002213"
    },
    {
        "type": "message",
        "user": "U043951H9",
        "text": "one of devs has just started with Ember and added this to a model",
        "ts": "1464767742.002214"
    },
    {
        "type": "message",
        "user": "U043951H9",
        "text": "it works",
        "ts": "1464767772.002215"
    },
    {
        "type": "message",
        "user": "U040MK408",
        "text": "I can\u2019t see any",
        "ts": "1464767862.002216"
    },
    {
        "type": "message",
        "user": "U040MK408",
        "text": "I mean, there might be some if you assume that is going to behave as a relationship",
        "ts": "1464767906.002217"
    },
    {
        "type": "message",
        "user": "U040MK408",
        "text": "because it won't",
        "ts": "1464767912.002218"
    },
    {
        "type": "message",
        "user": "U040MK408",
        "text": "but if you don\u2019t asume that, it is a promise array that is initialized on demand",
        "ts": "1464767949.002219"
    },
    {
        "type": "message",
        "user": "U043951H9",
        "text": "cool, it wouldn\u2019t get treated like a relationship as its only reading from existing data that is generated from previous actions outside the app",
        "ts": "1464768058.002220"
    },
    {
        "type": "message",
        "user": "U044QMK6K",
        "text": "as long as you\u2019re never setting it, then you\u2019re ok. I\u2019ve seen issues with people doing similar in the past &amp; when getting it it\u2019s a promise, but when you set it then subsequent gets the object back",
        "ts": "1464768115.002221"
    },
    {
        "type": "message",
        "user": "U043951H9",
        "text": "yeah",
        "ts": "1464768124.002222"
    },
    {
        "type": "message",
        "user": "U044QMK6K",
        "text": "and by \u201cpeople\u201d I mean \u201cme\"",
        "ts": "1464768161.002223"
    },
    {
        "type": "message",
        "user": "U044QMK6K",
        "text": "eg I have this in my app at the moment which I keep meaning to refactor away as I\u2019m sure it\u2019s possible to do in standard Ember Data &amp; JSONAPI:",
        "ts": "1464768191.002224"
    },
    {
        "type": "message",
        "user": "U044QMK6K",
        "text": "```\nitem: computed(\"itemType\", \"itemId\", {\n    get() {\n      return this.get(\"store\").findRecord(this.get(\"itemType\"), this.get(\"itemId\"));\n    },\n    set(k, item) {\n      this.setProperties({\n        itemType: item.constructor.modelName,\n        itemId:   item.get(\"id\")\n      });\n\n      \/\/ wrap in a promise so we can get(\"item\").then ... later\n      \/\/ and so it still works in bindings\n      return PromiseObject.create({\n        promise: RSVP.resolve(item)\n      });\n    }\n  })\n```",
        "edited": {
            "user": "U044QMK6K",
            "ts": "1464768206.000000"
        },
        "ts": "1464768195.002226"
    },
    {
        "type": "message",
        "user": "U040MK408",
        "text": "I\u2019d try to make it a relationship just for being idiomatic",
        "ts": "1464768225.002229"
    },
    {
        "type": "message",
        "user": "U040MK408",
        "text": "and because you can call `reload()` on it",
        "ts": "1464768243.002230"
    },
    {
        "type": "message",
        "user": "U044QMK6K",
        "text": "but yeah, ideally make it a relationship or look it up in a component\/route\/etc",
        "ts": "1464768243.002231"
    },
    {
        "type": "message",
        "user": "U040MK408",
        "text": "but I won\u2019t freak out if I see that",
        "ts": "1464768267.002232"
    },
    {
        "type": "message",
        "user": "U043951H9",
        "text": "they want to do it async, but they need the parent id to get them",
        "ts": "1464768312.002233"
    },
    {
        "type": "message",
        "user": "U043951H9",
        "text": "because they aren\u2019t real \u201cmodels\u201d they\u2019re just made up on the server side",
        "ts": "1464768322.002234"
    },
    {
        "type": "message",
        "user": "U043951H9",
        "text": "so there aren\u2019t any ids to request in a subsequent lookup",
        "ts": "1464768338.002235"
    },
    {
        "type": "message",
        "user": "U043951H9",
        "text": "but i would most likely just make it a synchronous load",
        "ts": "1464768351.002236"
    },
    {
        "type": "message",
        "user": "U043951H9",
        "text": "and just pass it back in the initial payload",
        "ts": "1464768357.002237"
    },
    {
        "type": "message",
        "user": "U04TVTLQ8",
        "text": "I just got hit by a fun ember data problem. Connecting via a Websocket to IoT data. So updates are pushed into the store",
        "ts": "1464770584.002238"
    },
    {
        "type": "message",
        "user": "U04TVTLQ8",
        "text": "Initial get-and-subscribe is in Adapter queryRecord",
        "ts": "1464770618.002239"
    },
    {
        "type": "message",
        "user": "U04TVTLQ8",
        "text": "All good so far. Adapter subscribes to server data and returns a promise that resolves when next push data event comes in",
        "ts": "1464770663.002240"
    },
    {
        "type": "message",
        "user": "U04TVTLQ8",
        "text": "However consider the second call to queryRecord",
        "ts": "1464770683.002241"
    },
    {
        "type": "message",
        "user": "U04BD6KB1",
        "text": "i was just looking at Emberfire yesterday to see how they did this; might be a useful reference.",
        "ts": "1464770686.002242"
    },
    {
        "type": "message",
        "user": "U04TVTLQ8",
        "text": "The model is already in the store",
        "ts": "1464770694.002243"
    },
    {
        "type": "message",
        "user": "U04TVTLQ8",
        "text": "So the Adapter should really just return it",
        "ts": "1464770710.002244"
    },
    {
        "type": "message",
        "user": "U04TVTLQ8",
        "text": "However the result of queryRecord is sent to the serialiser ",
        "ts": "1464770729.002245"
    },
    {
        "type": "message",
        "user": "U04TVTLQ8",
        "text": "Any way to bypass this and return a store model directly?",
        "ts": "1464770747.002246"
    },
    {
        "type": "message",
        "user": "U04TVTLQ8",
        "text": "In our case we have several helpers accessing the store directly so easy to use the same model in multiple places",
        "ts": "1464770828.002247"
    },
    {
        "type": "message",
        "user": "U040MK408",
        "text": "ok, 90% of the work is done",
        "ts": "1464773796.002248"
    },
    {
        "type": "message",
        "user": "U040MK408",
        "text": "Brace yourself, new ember-basic-dropdown is coming: <https:\/\/github.com\/cibernox\/ember-basic-dropdown\/pull\/88>",
        "attachments": [
            {
                "service_name": "GitHub",
                "title": "cibernox\/ember-basic-dropdown",
                "title_link": "https:\/\/github.com\/cibernox\/ember-basic-dropdown",
                "text": "ember-basic-dropdown - Functionality-agnostic dropdown component for Ember",
                "fallback": "GitHub: cibernox\/ember-basic-dropdown",
                "thumb_url": "https:\/\/avatars1.githubusercontent.com\/u\/265339?v=3&s=400",
                "from_url": "https:\/\/github.com\/cibernox\/ember-basic-dropdown",
                "thumb_width": 400,
                "thumb_height": 400,
                "service_icon": "https:\/\/github.com\/apple-touch-icon.png",
                "id": 1
            }
        ],
        "edited": {
            "user": "U040MK408",
            "ts": "1464773828.000000"
        },
        "ts": "1464773812.002249",
        "reactions": [
            {
                "name": "heart",
                "users": [
                    "U07CK66U8",
                    "U044QMK6K"
                ],
                "count": 2
            }
        ]
    },
    {
        "type": "message",
        "user": "U03V8V08M",
        "text": ":boom: :boom: :boom:",
        "ts": "1464774583.002252"
    },
    {
        "type": "message",
        "user": "U0L9R72E6",
        "text": "#accessibility question: is there a way to add `role=tab` to `link-to`?",
        "ts": "1464792479.002253"
    },
    {
        "type": "message",
        "user": "U03V8V08M",
        "text": "<@U0L9R72E6>: yes `{{link-to ariaRole=\"tab\"}}`",
        "ts": "1464794759.002254"
    },
    {
        "type": "message",
        "user": "U0L9R72E6",
        "text": ":thumbsup: thanks will try it!",
        "ts": "1464794806.002255"
    },
    {
        "type": "message",
        "user": "U03V8V08M",
        "text": "comes from here, if you\u2019re interested: <https:\/\/github.com\/emberjs\/ember.js\/blob\/master\/packages\/ember-views\/lib\/mixins\/aria_role_support.js>",
        "attachments": [
            {
                "service_name": "GitHub",
                "title": "emberjs\/ember.js",
                "title_link": "https:\/\/github.com\/emberjs\/ember.js\/blob\/master\/packages\/ember-views\/lib\/mixins\/aria_role_support.js",
                "text": "ember.js - Ember.js - A JavaScript framework for creating ambitious web applications",
                "fallback": "GitHub: emberjs\/ember.js",
                "thumb_url": "https:\/\/avatars0.githubusercontent.com\/u\/1253363?v=3&s=400",
                "from_url": "https:\/\/github.com\/emberjs\/ember.js\/blob\/master\/packages\/ember-views\/lib\/mixins\/aria_role_support.js",
                "thumb_width": 400,
                "thumb_height": 400,
                "service_icon": "https:\/\/github.com\/apple-touch-icon.png",
                "id": 1
            }
        ],
        "ts": "1464794821.002256"
    },
    {
        "type": "message",
        "user": "U06BGNMBL",
        "text": "ooh, that\u2019s handy",
        "ts": "1464794874.002258"
    },
    {
        "type": "message",
        "user": "U03V8V08M",
        "text": "yeah, sadly they only added it for role",
        "ts": "1464794887.002259"
    },
    {
        "type": "message",
        "user": "U03V8V08M",
        "text": "so you can\u2019t do `{{link-to aria-label=\"hello\"}}` without re-opening the link-to component",
        "ts": "1464794912.002260"
    },
    {
        "type": "message",
        "user": "U04BD6KB1",
        "text": "anyone have some good unit tests for helpers?",
        "ts": "1464798743.002261"
    },
    {
        "type": "message",
        "user": "U04BD6KB1",
        "text": "just looking for a few good examples to get me going",
        "ts": "1464798762.002262"
    },
    {
        "type": "message",
        "user": "U07E9GKUZ",
        "text": "you mean view helpers?",
        "ts": "1464798782.002263"
    },
    {
        "type": "message",
        "user": "U04BD6KB1",
        "text": "well maybe, i think the official name is just \u201chelpers\u201d isn\u2019t it? <https:\/\/guides.emberjs.com\/v2.5.0\/templates\/writing-helpers\/>",
        "ts": "1464799374.002264"
    },
    {
        "type": "message",
        "user": "U04BD6KB1",
        "text": "not related to the now deprecated Ember _views_",
        "ts": "1464799606.002265"
    },
    {
        "type": "message",
        "user": "U04BD6KB1",
        "text": "`Ember.Helper`",
        "ts": "1464799632.002266"
    },
    {
        "type": "message",
        "user": "U07E9GKUZ",
        "text": "best way I\u2019ve found to unit test them is to do as the example does",
        "ts": "1464799855.002267"
    },
    {
        "type": "message",
        "user": "U07E9GKUZ",
        "text": "then just import the simple function and test that",
        "ts": "1464799865.002268"
    },
    {
        "type": "message",
        "user": "U07E9GKUZ",
        "text": "instead of the Ember.Helper thingy",
        "ts": "1464799873.002269"
    },
    {
        "type": "message",
        "user": "U04TVTLQ8",
        "text": "<@U04BD6KB1> We are having problems testing helpers that are more than simple functions. We are bringing in async data so need to recompute when the promise resolves. We use hbs rendering and then look for the helper output in the html. ",
        "ts": "1464803286.002270"
    },
    {
        "type": "message",
        "user": "U04BD6KB1",
        "text": "<@U04TVTLQ8>: that sounds promising",
        "ts": "1464803318.002271"
    },
    {
        "type": "message",
        "user": "U04TVTLQ8",
        "text": "Problem comes where promiseobject is already resolved. Promise.then doesn't happen until after the test is finished",
        "ts": "1464803324.002272"
    },
    {
        "type": "message",
        "user": "U04BD6KB1",
        "text": "do you have a twiddle example you could share?",
        "ts": "1464803331.002273"
    },
    {
        "type": "message",
        "user": "U04TVTLQ8",
        "text": "Not yet - only found problem this afternoon. Will have my guys create one tomorrow",
        "ts": "1464803898.002274"
    },
    {
        "type": "message",
        "user": "U04TVTLQ8",
        "text": "For your tests, use same technique as testing component",
        "ts": "1464803949.002275"
    },
    {
        "type": "message",
        "user": "U04TVTLQ8",
        "text": "By rendering an hbs template string",
        "ts": "1464803984.002276"
    },
    {
        "type": "message",
        "user": "U04TVTLQ8",
        "text": "For an action helper we use a button with our helper as the action then use the click() test helper",
        "ts": "1464804026.002277"
    },
    {
        "type": "message",
        "user": "U04BD6KB1",
        "text": "ok, will give it a try but please ping the twiddle when it\u2019s ready",
        "ts": "1464809071.002278"
    }
]