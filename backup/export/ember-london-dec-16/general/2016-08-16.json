[
    {
        "type": "message",
        "user": "U0A48LWTG",
        "text": "hi guys",
        "ts": "1471332477.000722"
    },
    {
        "type": "message",
        "user": "U03V8V08M",
        "text": "oh hai <@U0A48LWTG>",
        "ts": "1471333583.000723"
    },
    {
        "type": "message",
        "user": "U0A48LWTG",
        "text": "hey <@U03V8V08M>, I\u2019m probably giving blanket a try this week :slightly_smiling_face:",
        "ts": "1471333627.000724"
    },
    {
        "type": "message",
        "user": "U03V8V08M",
        "text": "cool",
        "ts": "1471333707.000725"
    },
    {
        "type": "message",
        "user": "U047GTU64",
        "text": "<@U04TVTLQ8>: we do something like that here to hijack a service\u2019s functions that call the AI service",
        "ts": "1471333878.000726"
    },
    {
        "type": "message",
        "user": "U04TVTLQ8",
        "text": "<@U047GTU64>: how? Registry.resolve gets the class not the singleton. I got stuck st that point ",
        "ts": "1471333960.000727"
    },
    {
        "type": "message",
        "user": "U047GTU64",
        "text": "I just re-assign functions with ones that behave similarly but mock stuff",
        "ts": "1471333998.000728"
    },
    {
        "type": "message",
        "user": "U047GTU64",
        "text": "so looks kind off like this",
        "ts": "1471334002.000729"
    },
    {
        "type": "message",
        "user": "U03V8V08M",
        "text": "<@U04TVTLQ8>: this might be useful <https:\/\/github.com\/rondale-sc\/ember-owner-test-utils>",
        "attachments": [
            {
                "service_name": "GitHub",
                "title": "rondale-sc\/ember-owner-test-utils",
                "title_link": "https:\/\/github.com\/rondale-sc\/ember-owner-test-utils",
                "text": "ember-owner-test-utils - Easy mechanism to access and override Ember owner APIs in test",
                "fallback": "GitHub: rondale-sc\/ember-owner-test-utils",
                "thumb_url": "https:\/\/avatars1.githubusercontent.com\/u\/75710?v=3&s=400",
                "from_url": "https:\/\/github.com\/rondale-sc\/ember-owner-test-utils",
                "thumb_width": 400,
                "thumb_height": 400,
                "service_icon": "https:\/\/github.com\/apple-touch-icon.png",
                "id": 1
            }
        ],
        "ts": "1471334225.000730"
    },
    {
        "type": "message",
        "user": "U047GTU64",
        "text": "```\nimport Ember from 'ember';\n\nconst { RSVP } = Ember;\n\nlet toggleQA = function (enabled, app) {\n  let bot = app.lookup('service:bot');\n  let qa = app.lookup('component:qa-ui');\n  let qaContainer = app.lookup('service:qa-container');\n\n  qaContainer.set('enabled', enabled);\n  qaContainer.set('converseApiCall', bot.get('converseApiCall'));\n\n  if (enabled) {\n    bot.set('converseApiCall', function () {\n      let payload = qa.get('stubbedPayloads').get('firstObject');\n\n      if (payload.entities &amp;&amp; payload.entities.intent) {\n        this.set('entities', payload.entities);\n      }\n\n      return new RSVP.Promise((resolve) =&gt; {\n        qa.get('stubbedPayloads').removeObject(payload);\n        resolve(payload);\n      });\n    });\n  } else {\n    bot.set('converseApiCall', qaContainer.get('converseApiCall'));\n  }\n};\n```",
        "edited": {
            "user": "U047GTU64",
            "ts": "1471334323.000000"
        },
        "ts": "1471334266.000732"
    },
    {
        "type": "message",
        "user": "U047GTU64",
        "text": "shortened to take off some noise",
        "ts": "1471334333.000734"
    },
    {
        "type": "message",
        "user": "U047GTU64",
        "text": "but your test helpers will receive an `app` instance as the first argument",
        "ts": "1471334345.000735"
    },
    {
        "type": "message",
        "user": "U047GTU64",
        "text": "so you can pretty much lookup and re-assign any attribute, that includes functions",
        "ts": "1471334357.000736"
    },
    {
        "type": "message",
        "user": "U04TVTLQ8",
        "text": "<@U047GTU64>: that's what I'm doing but app.lookup gives me the class not the singleton??",
        "ts": "1471334514.000737"
    },
    {
        "type": "message",
        "user": "U047GTU64",
        "text": "don\u2019t you need to specify the service as a singleton when you register it?",
        "ts": "1471334546.000738"
    },
    {
        "type": "message",
        "user": "U047GTU64",
        "text": "maybe what you have is a class and not a singleton hence your result",
        "ts": "1471334553.000739"
    },
    {
        "type": "message",
        "user": "U04TVTLQ8",
        "text": "<@U047GTU64>: how?",
        "ts": "1471334563.000740"
    },
    {
        "type": "message",
        "user": "U04TVTLQ8",
        "text": "I'm using registry.tegister",
        "ts": "1471334582.000741"
    },
    {
        "type": "message",
        "user": "U047GTU64",
        "text": "one sec",
        "ts": "1471334598.000742"
    },
    {
        "type": "message",
        "user": "U047GTU64",
        "text": "```\nappInstance.register('service:current-user', service, { instantiate: false, singleton: true });\n```",
        "ts": "1471334616.000743"
    },
    {
        "type": "message",
        "user": "U047GTU64",
        "text": "you\u2019re passing those options right?",
        "ts": "1471334630.000744"
    },
    {
        "type": "message",
        "user": "U047GTU64",
        "text": "singleton specially",
        "ts": "1471334637.000745"
    },
    {
        "type": "message",
        "user": "U04TVTLQ8",
        "text": "No... :)",
        "ts": "1471335266.000746"
    },
    {
        "type": "message",
        "user": "U04TVTLQ8",
        "text": "Thanks!!",
        "ts": "1471335270.000747"
    },
    {
        "type": "message",
        "user": "U047GTU64",
        "text": ":sun_with_face:",
        "ts": "1471335793.000748"
    },
    {
        "type": "message",
        "user": "U0A48LWTG",
        "text": "guys, does integration test reset the app state for each test?",
        "ts": "1471336035.000749"
    },
    {
        "type": "message",
        "user": "U0A48LWTG",
        "text": "I have a strange situation where each test run a single test pass, while if I run them all together fail",
        "ts": "1471336066.000750"
    },
    {
        "type": "message",
        "user": "U04TVTLQ8",
        "text": "<@U0A48LWTG>: that's definitely a symptom that there is a global somewhere",
        "ts": "1471336141.000751"
    },
    {
        "type": "message",
        "user": "U04TVTLQ8",
        "text": "Look for an object in one of your classes...\n{\n  Thing: {}\n)",
        "ts": "1471336188.000752"
    },
    {
        "type": "message",
        "user": "U04TVTLQ8",
        "text": "Instead you should\n{\n  Thing: null\n}\nAnd set it to {} on the init event",
        "ts": "1471336236.000753"
    },
    {
        "type": "message",
        "user": "U0A48LWTG",
        "text": "<@U04TVTLQ8>: thank you, going to have a look at it!",
        "ts": "1471336262.000754"
    },
    {
        "type": "message",
        "user": "U04TVTLQ8",
        "text": "99% likelihood that that's the problem",
        "ts": "1471336268.000755"
    },
    {
        "type": "message",
        "user": "U0A48LWTG",
        "text": "yeah now that you are saying it, it seems reasonable",
        "ts": "1471336297.000756"
    },
    {
        "type": "message",
        "user": "U0A48LWTG",
        "text": ":slightly_smiling_face:",
        "ts": "1471336298.000757"
    },
    {
        "type": "message",
        "user": "U04TVTLQ8",
        "text": "You accidentally put the object on the class. Init puts it on the object instead",
        "ts": "1471336301.000758"
    },
    {
        "type": "message",
        "user": "U04TVTLQ8",
        "text": "It's a nasty little subtlety that catches me out still",
        "ts": "1471336326.000759"
    },
    {
        "type": "message",
        "user": "U0A48LWTG",
        "text": "yeah yeah right.. I found something like that",
        "ts": "1471336460.000760"
    },
    {
        "type": "message",
        "user": "U0A48LWTG",
        "text": "trying to change it right now.. actually this was code I got from another dev so I was trying to figure it out",
        "ts": "1471336508.000761"
    },
    {
        "type": "message",
        "user": "U0A48LWTG",
        "text": "and didn\u2019t think about it",
        "ts": "1471336513.000762"
    },
    {
        "type": "message",
        "user": "U04TVTLQ8",
        "text": "<@U047GTU64>: I'm in an async test helper. How do I get to the application instance? App.lookup is undefined",
        "ts": "1471337619.000763"
    },
    {
        "type": "message",
        "user": "U047GTU64",
        "text": "did you called it with `ember g test-helper &lt;name&gt;` ?",
        "ts": "1471337652.000764"
    },
    {
        "type": "message",
        "user": "U04TVTLQ8",
        "text": "Yes",
        "ts": "1471337863.000765"
    },
    {
        "type": "message",
        "user": "U04TVTLQ8",
        "text": "Found app.register and app.resolveRegistration but still getting a class not an object",
        "ts": "1471337917.000766"
    },
    {
        "type": "message",
        "user": "U047GTU64",
        "text": "no idea there :anguished:",
        "ts": "1471337928.000767"
    },
    {
        "type": "message",
        "user": "U047GTU64",
        "text": "are you sure you\u2019re registering the singleton and not the class all together?",
        "ts": "1471337957.000768"
    },
    {
        "type": "message",
        "user": "U047GTU64",
        "text": "because I\u2019m pressuming `singleton: true` just makes sure that it wont attempt to instantiate whatever you registered whenever you inject it somewhere",
        "ts": "1471337985.000769"
    },
    {
        "type": "message",
        "user": "U04TVTLQ8",
        "text": "Ahhh so you register an object not a class?",
        "ts": "1471338084.000770"
    },
    {
        "type": "message",
        "user": "U04TVTLQ8",
        "text": "I thought it was lazy instantiated",
        "ts": "1471338104.000771"
    },
    {
        "type": "message",
        "user": "U047GTU64",
        "text": "I\u2019m not entirely sure but its worth a try",
        "ts": "1471338167.000772"
    },
    {
        "type": "message",
        "user": "U047GTU64",
        "text": "it makes sense to register an object and not a class in my head if you passed the flag `singleton: true`",
        "ts": "1471338185.000773"
    },
    {
        "type": "message",
        "user": "U04TVTLQ8",
        "text": "<@U040MK408> <@U03V8V08M>: can't work out how to register a mock service and look it up in a test helper. Any ideas?",
        "ts": "1471338892.000774"
    },
    {
        "type": "message",
        "user": "U03V8V08M",
        "text": "I\u2019d give this a go <https:\/\/github.com\/rondale-sc\/ember-owner-test-utils>",
        "attachments": [
            {
                "service_name": "GitHub",
                "title": "rondale-sc\/ember-owner-test-utils",
                "title_link": "https:\/\/github.com\/rondale-sc\/ember-owner-test-utils",
                "text": "ember-owner-test-utils - Easy mechanism to access and override Ember owner APIs in test",
                "fallback": "GitHub: rondale-sc\/ember-owner-test-utils",
                "thumb_url": "https:\/\/avatars1.githubusercontent.com\/u\/75710?v=3&s=400",
                "from_url": "https:\/\/github.com\/rondale-sc\/ember-owner-test-utils",
                "thumb_width": 400,
                "thumb_height": 400,
                "service_icon": "https:\/\/github.com\/apple-touch-icon.png",
                "id": 1
            }
        ],
        "ts": "1471338919.000775"
    },
    {
        "type": "message",
        "user": "U03V8V08M",
        "text": "as for looking it up",
        "ts": "1471338964.000777"
    },
    {
        "type": "message",
        "user": "U04TVTLQ8",
        "text": "Ok that does register... Lookup?",
        "ts": "1471339009.000778"
    },
    {
        "type": "message",
        "user": "U03V8V08M",
        "text": "yeah, that\u2019s tricky\u2026 there\u2019s not a public api yet I don\u2019t believe",
        "ts": "1471339030.000779"
    },
    {
        "type": "message",
        "user": "U03V8V08M",
        "text": "you can probably still do `app.__container__.lookup('service:fog')`",
        "ts": "1471339045.000780"
    },
    {
        "type": "message",
        "user": "U03V8V08M",
        "text": "but that\u2019ll go away at some point",
        "ts": "1471339055.000781"
    },
    {
        "type": "message",
        "user": "U04TVTLQ8",
        "text": "That addon uses test context not a test helper",
        "ts": "1471339155.000782"
    },
    {
        "type": "message",
        "user": "U04TVTLQ8",
        "text": "Maybe I can't do this with helpers",
        "ts": "1471339171.000783"
    },
    {
        "type": "message",
        "user": "U04TVTLQ8",
        "text": "Yup. Works as import. Doesn't work as test helper. :(",
        "ts": "1471339875.000784"
    },
    {
        "type": "message",
        "user": "U03V8V08M",
        "text": "<@U04TVTLQ8>: one more thing you can try, informed by that addon\u2026\n```\nexport default Ember.Test.registerAsyncHelper('setFooMessage', function(app) {\n  app.__deprecatedInstance__.lookup('service:foo') \/\/ =&gt; instance of service\n});\n```",
        "ts": "1471340119.000785"
    },
    {
        "type": "message",
        "user": "U03V8V08M",
        "text": "but obviously `__deprecatedInstance__` is has red flags and sirens all over it",
        "ts": "1471340148.000786"
    },
    {
        "type": "message",
        "user": "U03V8V08M",
        "text": "<@U04TVTLQ8>: here is a very weasley approach: <https:\/\/github.com\/jgwhite\/mock-service-demo\/blob\/master\/tests\/helpers\/start-app.js>",
        "attachments": [
            {
                "service_name": "GitHub",
                "title": "jgwhite\/mock-service-demo",
                "title_link": "https:\/\/github.com\/jgwhite\/mock-service-demo\/blob\/master\/tests\/helpers\/start-app.js",
                "text": "Contribute to mock-service-demo development by creating an account on GitHub.",
                "fallback": "GitHub: jgwhite\/mock-service-demo",
                "thumb_url": "https:\/\/avatars3.githubusercontent.com\/u\/34030?v=3&s=400",
                "from_url": "https:\/\/github.com\/jgwhite\/mock-service-demo\/blob\/master\/tests\/helpers\/start-app.js",
                "thumb_width": 256,
                "thumb_height": 256,
                "service_icon": "https:\/\/github.com\/apple-touch-icon.png",
                "id": 1
            }
        ],
        "ts": "1471341792.000787"
    },
    {
        "type": "message",
        "user": "U03V8V08M",
        "text": "create a static object:\n```\n  let fooService = Ember.Object.create({\n    message: 'baz'\n  });\n```",
        "edited": {
            "user": "U03V8V08M",
            "ts": "1471341842.000000"
        },
        "ts": "1471341832.000789"
    },
    {
        "type": "message",
        "user": "U03V8V08M",
        "text": "stick a reference to it on application:\n```\n    application.fooService = fooService;\n```",
        "ts": "1471341862.000791"
    },
    {
        "type": "message",
        "user": "U03V8V08M",
        "text": "then register a fake factory that always returns the same object:\n```\n    register({ application }, 'service:foo', {\n      create: () =&gt; fooService,\n      isServiceFactory: true\n    });\n```",
        "ts": "1471341891.000792"
    },
    {
        "type": "message",
        "user": "U03V8V08M",
        "text": "all of which means in your helper you can access the `fooService` previously stashed on the object:\n```\nexport default Ember.Test.registerAsyncHelper('setFooMessage', function(app, msg) {\n  app.fooService.set('message', msg);\n});\n```",
        "ts": "1471341941.000793"
    },
    {
        "type": "message",
        "user": "U04TVTLQ8",
        "text": "Ohhhhh. Where's my sick bag. Clever :) but this points out the missing functionality in ember",
        "ts": "1471341989.000794"
    },
    {
        "type": "message",
        "user": "U03V8V08M",
        "text": "yup",
        "ts": "1471341993.000795"
    },
    {
        "type": "message",
        "user": "U047GTU64",
        "text": ":+1:",
        "ts": "1471342701.000796"
    },
    {
        "type": "message",
        "user": "U04BD6KB1",
        "text": "hey is there a shorthand way to load a model and then ask for a `hasMany` relationship to be followed?",
        "ts": "1471344674.000797"
    },
    {
        "type": "message",
        "user": "U04BD6KB1",
        "text": "i seem to remember this but can\u2019t find it",
        "ts": "1471344684.000798"
    },
    {
        "type": "message",
        "subtype": "file_share",
        "text": "<@U04BD6KB1|ksnyde> uploaded a file: <https:\/\/emberlondon.slack.com\/files\/ksnyde\/F21Q0FGA3\/long_form.html|long form>",
        "file": {
            "id": "F21Q0FGA3",
            "created": 1471344708,
            "timestamp": 1471344708,
            "name": "long_form.html",
            "title": "long form",
            "mimetype": "text\/plain",
            "filetype": "html",
            "pretty_type": "HTML",
            "user": "U04BD6KB1",
            "editable": true,
            "size": 513,
            "mode": "snippet",
            "is_external": false,
            "external_type": "",
            "is_public": true,
            "public_url_shared": false,
            "display_as_bot": false,
            "username": "",
            "url_private": "https:\/\/files.slack.com\/files-pri\/T03SSL0FF-F21Q0FGA3\/long_form.html?t=xoxe-3910680525-115741181265-116496169492-28d023e02c",
            "url_private_download": "https:\/\/files.slack.com\/files-pri\/T03SSL0FF-F21Q0FGA3\/download\/long_form.html?t=xoxe-3910680525-115741181265-116496169492-28d023e02c",
            "permalink": "https:\/\/emberlondon.slack.com\/files\/ksnyde\/F21Q0FGA3\/long_form.html",
            "permalink_public": "https:\/\/slack-files.com\/T03SSL0FF-F21Q0FGA3-1687d43b2d",
            "edit_link": "https:\/\/emberlondon.slack.com\/files\/ksnyde\/F21Q0FGA3\/long_form.html\/edit",
            "preview": "export default Ember.Route.extend({\r\n\r\n  forecast: null,\r\n  model() {\r\n    return new Promise( (resolve, reject) => {\r",
            "preview_highlight": "<div class=\"CodeMirror cm-s-default CodeMirrorServer\" oncopy=\"if(event.clipboardData){event.clipboardData.setData('text\/plain',window.getSelection().toString().replace(\/\\u200b\/g,''));event.preventDefault();event.stopPropagation();}\">\n<div class=\"CodeMirror-code\">\n<div><pre>export default Ember.Route.extend({<\/pre><\/div>\n<div><pre>&#8203;<\/pre><\/div>\n<div><pre>  forecast: null,<\/pre><\/div>\n<div><pre>  model() {<\/pre><\/div>\n<div><pre>    return new Promise( (resolve, reject) =&gt; {<\/pre><\/div>\n<\/div>\n<\/div>\n",
            "lines": 20,
            "lines_more": 15,
            "preview_is_truncated": null,
            "channels": [
                "C03SSL0GP"
            ],
            "groups": [],
            "ims": [],
            "comments_count": 0
        },
        "user": "U04BD6KB1",
        "upload": true,
        "display_as_bot": false,
        "username": "<@U04BD6KB1|ksnyde>",
        "bot_id": null,
        "ts": "1471344709.000799"
    },
    {
        "type": "message",
        "user": "U04BD6KB1",
        "text": "the above \u201clong form\u201d resolves the correct payload but (a) i\u2019d love something shorter and (b) right now the router doesn\u2019t seem to recognize that the promise has been resolved.",
        "ts": "1471344763.000800"
    },
    {
        "type": "message",
        "user": "U07E9GKUZ",
        "text": "<@U04BD6KB1>: doesn\u2019t something like this work? \n```\nreturn this.store.findAll(\u2018forecast\u2019).then(forecasts =&gt; {\n  return Ember.RSVP.all(forecasts.map(forecast =&gt; {\n    return forecast.get(\u2018versions\u2019);\n  });\n});\n```",
        "ts": "1471345185.000802"
    },
    {
        "type": "message",
        "user": "U04BD6KB1",
        "text": "thanks <@U07E9GKUZ>, that\u2019s a similar in approach to what I took in my long-form; it\u2019s an improvement though. I just thought there was a new 2.x feature in Ember-data where I could just configure it to automatically load this. Might be wrong.",
        "ts": "1471345333.000803"
    },
    {
        "type": "message",
        "user": "U07E9GKUZ",
        "text": "there is an includes option in ember-data :slightly_smiling_face:",
        "ts": "1471345350.000804"
    },
    {
        "type": "message",
        "user": "U07E9GKUZ",
        "text": "<http:\/\/emberjs.com\/blog\/2016\/03\/13\/ember-data-2-4-released.html#toc_code-ds-finder-include-code>",
        "attachments": [
            {
                "title": "Ember.js: Ember Data 2.4 and 2.5 Beta Released",
                "title_link": "http:\/\/emberjs.com\/blog\/2016\/03\/13\/ember-data-2-4-released.html#toc_upcoming-features-in-ember-data-2-5-beta-1",
                "text": "Ember.js helps developers be more productive out of the box. Designed with developer ergonomics in mind, its friendly APIs help you get your job done\u2014fast.",
                "fallback": "Ember.js: Ember Data 2.4 and 2.5 Beta Released",
                "thumb_url": "http:\/\/emberjs.com\/images\/tomster-sm.png",
                "from_url": "http:\/\/emberjs.com\/blog\/2016\/03\/13\/ember-data-2-4-released.html#toc_upcoming-features-in-ember-data-2-5-beta-1",
                "thumb_width": 220,
                "thumb_height": 220,
                "service_icon": "http:\/\/emberjs.com\/images\/favicon.png",
                "service_name": "emberjs.com",
                "id": 1
            }
        ],
        "edited": {
            "user": "U07E9GKUZ",
            "ts": "1471345382.000000"
        },
        "ts": "1471345371.000805"
    },
    {
        "type": "message",
        "user": "U04BD6KB1",
        "text": "Excellent that\u2019s what I was looking for!",
        "ts": "1471345412.000808"
    },
    {
        "type": "message",
        "user": "U07E9GKUZ",
        "text": "this works if your backend is json-api spec compliant",
        "ts": "1471345413.000809"
    },
    {
        "type": "message",
        "user": "U07E9GKUZ",
        "text": ":+1:",
        "ts": "1471345418.000810"
    },
    {
        "type": "message",
        "user": "U04BD6KB1",
        "text": "shame it doesn\u2019t work on plain old JSON",
        "ts": "1471345513.000811"
    },
    {
        "type": "message",
        "user": "U07E9GKUZ",
        "text": "yeah, I don\u2019t know much about json api anymore, too much time spent on graphql :smile:",
        "ts": "1471345543.000812"
    },
    {
        "type": "message",
        "user": "U04BD6KB1",
        "text": "LOL",
        "ts": "1471345550.000813"
    },
    {
        "type": "message",
        "user": "U04BD6KB1",
        "text": "still loving it?",
        "ts": "1471345554.000814"
    },
    {
        "type": "message",
        "user": "U04BD6KB1",
        "text": "btw <@U07E9GKUZ> had a quick question about your ember-calendar \u2026 wondering how easy it would be to add structured data to the \u201cappointment\u201d records. Are there any cases where you\u2019ve done that?",
        "ts": "1471345638.000815"
    },
    {
        "type": "message",
        "user": "U14KVFYS3",
        "text": "Using JSON API here, has worked awesomely for most use cases",
        "ts": "1471345638.000816"
    },
    {
        "type": "message",
        "user": "U04BD6KB1",
        "text": "<@U14KVFYS3>: what backend are you using?",
        "ts": "1471345656.000817"
    },
    {
        "type": "message",
        "user": "U14KVFYS3",
        "text": "Laravel \u2013\u00a0and a JSON API library I\u2019m creating\n<https:\/\/github.com\/huntie\/laravel-simple-jsonapi>",
        "attachments": [
            {
                "service_name": "GitHub",
                "title": "huntie\/laravel-simple-jsonapi",
                "title_link": "https:\/\/github.com\/huntie\/laravel-simple-jsonapi",
                "text": "laravel-simple-jsonapi - Simpler JSON API support for Laravel",
                "fallback": "GitHub: huntie\/laravel-simple-jsonapi",
                "thumb_url": "https:\/\/avatars2.githubusercontent.com\/u\/2547783?v=3&s=400",
                "from_url": "https:\/\/github.com\/huntie\/laravel-simple-jsonapi",
                "thumb_width": 400,
                "thumb_height": 400,
                "service_icon": "https:\/\/github.com\/apple-touch-icon.png",
                "id": 1
            }
        ],
        "ts": "1471345706.000818"
    },
    {
        "type": "message",
        "user": "U07E9GKUZ",
        "text": "<@U04BD6KB1>: pretty easy, although I was planning to change the way subcomponents are passed to the calendar, copying the same approach that miguel has done in the power select",
        "ts": "1471345818.000820"
    },
    {
        "type": "message",
        "user": "U07E9GKUZ",
        "text": "so that you can pass custom components to each section of the calendar",
        "ts": "1471345843.000821"
    },
    {
        "type": "message",
        "user": "U07E9GKUZ",
        "text": "unfortunately not really a hot area in our project right now",
        "ts": "1471345857.000822"
    },
    {
        "type": "message",
        "user": "U07E9GKUZ",
        "text": "so \u00af\\_(\u30c4)_\/\u00af",
        "ts": "1471345862.000823"
    },
    {
        "type": "message",
        "user": "U0A48LWTG",
        "text": "<@U04TVTLQ8>: you were right about globals, thank you for pointing it out",
        "ts": "1471350346.000824"
    },
    {
        "type": "message",
        "user": "U04TVTLQ8",
        "text": "<@U0A48LWTG> :slightly_smiling_face: it's bitten me a lot in the past - it's now my first check when I get tests breaking each other. Not been wrong yet!",
        "ts": "1471357376.000825",
        "reactions": [
            {
                "name": "+1",
                "users": [
                    "U0A48LWTG"
                ],
                "count": 1
            }
        ]
    },
    {
        "type": "message",
        "user": "U04TVTLQ8",
        "text": "<@U0A48LWTG>: May the power of Ember London be with you\nALL: And also with you",
        "ts": "1471357420.000826"
    },
    {
        "type": "message",
        "user": "U0A48LWTG",
        "text": "ahhaha",
        "ts": "1471357657.000827"
    },
    {
        "type": "message",
        "user": "U04TVTLQ8",
        "text": "thanks <@U03V8V08M> - works now. added a mockIoT helper which registers the mock service and clears everything, which goes in beforeEach - or is there a way to register something that gets called as part of the test setup?",
        "ts": "1471363419.000828"
    },
    {
        "type": "message",
        "user": "U03V8V08M",
        "text": "add it to tests\/helpers\/start-app.js",
        "ts": "1471364524.000829"
    },
    {
        "type": "message",
        "user": "U03V8V08M",
        "text": "^ <@U04TVTLQ8>",
        "ts": "1471364527.000830"
    },
    {
        "type": "message",
        "user": "U04TVTLQ8",
        "text": "<@U03V8V08M> :slightly_smiling_face: It lives!!!!",
        "ts": "1471366154.000831"
    },
    {
        "type": "message",
        "user": "U04TVTLQ8",
        "text": "Nice - now have computed properties that update when multicast packets on the network fly past with the correct headers",
        "ts": "1471366251.000832"
    },
    {
        "type": "message",
        "user": "U03V5B7KY",
        "text": "<https:\/\/twitter.com\/krisselden\/status\/765583166094446592>",
        "attachments": [
            {
                "fallback": "<https:\/\/twitter.com\/krisselden|@krisselden>: Most of this applies to programming in general, not just Ember, favorite section \u201cTeammates\u201d  <https:\/\/blog.embermap.com\/good-ember-developer-bad-ember-developer-7f9d52c6a0b5> by <https:\/\/twitter.com\/ryantotweets|@ryantotweets>",
                "ts": 1471364225,
                "author_name": "Kris Selden",
                "author_link": "https:\/\/twitter.com\/krisselden\/status\/765583166094446592",
                "author_icon": "https:\/\/pbs.twimg.com\/profile_images\/459410603858083840\/_cts1ZyJ_normal.jpeg",
                "author_subname": "@krisselden",
                "text": "Most of this applies to programming in general, not just Ember, favorite section \u201cTeammates\u201d  <https:\/\/blog.embermap.com\/good-ember-developer-bad-ember-developer-7f9d52c6a0b5> by <https:\/\/twitter.com\/ryantotweets|@ryantotweets>",
                "service_name": "twitter",
                "service_url": "https:\/\/twitter.com\/",
                "from_url": "https:\/\/twitter.com\/krisselden\/status\/765583166094446592",
                "id": 1,
                "footer": "Twitter",
                "footer_icon": "https:\/\/a.slack-edge.com\/6e067\/img\/services\/twitter_pixel_snapped_32.png"
            }
        ],
        "ts": "1471367441.000833"
    },
    {
        "type": "message",
        "user": "U03V5B7KY",
        "text": "why is it bad form to return `RSVP.hash`? :disappointed:",
        "ts": "1471367451.000835"
    },
    {
        "type": "message",
        "user": "U03V8V08M",
        "text": "That post is nasty",
        "ts": "1471367619.000836"
    },
    {
        "type": "message",
        "user": "U03V8V08M",
        "text": "<@U03V5B7KY>: it isn't, at least not in the black-and-white way that post is suggesting",
        "ts": "1471367754.000837"
    },
    {
        "type": "message",
        "user": "U03V8V08M",
        "text": "if you have `app\/routes\/post.js` it might be advisable to always return a single model there",
        "ts": "1471367838.000838"
    },
    {
        "type": "message",
        "user": "U03V8V08M",
        "text": "cos otherwise you might call `{{link-to \"post\" post}}` elsewhere and things wouldn\u2019t work quite right",
        "ts": "1471367855.000839"
    },
    {
        "type": "message",
        "user": "U03V8V08M",
        "text": "but it\u2019s certainly not a blanket good\/bad thing",
        "ts": "1471367880.000840"
    },
    {
        "type": "message",
        "user": "U03V8V08M",
        "text": "I can actually imagine this article putting people off trying ember",
        "ts": "1471368174.000841"
    },
    {
        "type": "message",
        "user": "U044QMK6K",
        "text": "ugh yeah, it\u2019s full of good points but the \u201cgood developer \/ bad developer\u201d really makes me cringe",
        "ts": "1471372391.000842"
    }
]