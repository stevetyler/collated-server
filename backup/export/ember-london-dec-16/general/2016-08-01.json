[
    {
        "type": "message",
        "user": "U047GTU64",
        "text": "good morning everyone",
        "ts": "1470038949.000410"
    },
    {
        "type": "message",
        "user": "U047GTU64",
        "text": "do any of you know someone at intercom? or someone that knows their product\/APIs well?",
        "ts": "1470038960.000411"
    },
    {
        "type": "message",
        "user": "U043AB2QT",
        "text": "Well, Gavin Joyce is the obvious choice that comes to mind.",
        "ts": "1470040990.000412"
    },
    {
        "type": "message",
        "user": "U047GTU64",
        "text": "<@U0CTN02SZ>: :smile:",
        "ts": "1470041088.000413"
    },
    {
        "type": "message",
        "user": "U047GTU64",
        "text": "<@U043AB2QT> thanks",
        "ts": "1470041103.000414"
    },
    {
        "type": "message",
        "user": "U03V2PZUB",
        "text": "Anyone familiar with ember-concurrency and doing some primitive animations?",
        "ts": "1470050007.000415"
    },
    {
        "type": "message",
        "user": "U043AB2QT",
        "text": "<@U03V2PZUB>: I've used ember-concurrency a fair bit.... Not in relation to animations though.",
        "ts": "1470050046.000416"
    },
    {
        "type": "message",
        "user": "U03V2PZUB",
        "text": "<@U043AB2QT>: I've got this component which does an animation. Whilst localising the app I had a problem. When changing the locale, the animation would need to re-run. <https:\/\/cl.ly\/gpgx>. The animation previously was a lots of delayed `Ember.run.later`s. So I looked to ember-concurrency to be able to restart the animation.",
        "ts": "1470050381.000417"
    },
    {
        "type": "message",
        "user": "U03V2PZUB",
        "text": "<@U043AB2QT>: The \"animate\" function is now a task (<https:\/\/cl.ly\/gqBP>)",
        "attachments": [
            {
                "service_name": "CloudApp",
                "title": "Screen Shot 2016-08-01 at 12.19.55.png",
                "title_link": "https:\/\/cl.ly\/gqBP",
                "fallback": "CloudApp: Screen Shot 2016-08-01 at 12.19.55.png",
                "image_url": "http:\/\/f.cl.ly\/items\/3w1c18223N0j2S1g2B2l\/Screen%20Shot%202016-08-01%20at%2012.19.55.png",
                "from_url": "https:\/\/cl.ly\/gqBP",
                "image_width": 263,
                "image_height": 250,
                "image_bytes": 158331,
                "service_icon": "https:\/\/cl.ly\/favicon.ico",
                "id": 1
            }
        ],
        "ts": "1470050430.000418"
    },
    {
        "type": "message",
        "user": "U03V2PZUB",
        "text": "<@U043AB2QT>: Two questions.\n\n- Is there a better way of delaying a task aside from yielding?\n- Is there a way of removing that \"animated\" variable now that its a task?",
        "edited": {
            "user": "U03V2PZUB",
            "ts": "1470050524.000000"
        },
        "ts": "1470050502.000420"
    },
    {
        "type": "message",
        "user": "U07E9GKUZ",
        "text": "the task itself exposes if it\u2019s running, so instead of using animated you could just use \u2018animate.isRunning'",
        "ts": "1470050606.000423"
    },
    {
        "type": "message",
        "user": "U03V2PZUB",
        "text": "<http:\/\/ember-concurrency.com\/#\/docs\/derived-state>",
        "ts": "1470050619.000424"
    },
    {
        "type": "message",
        "user": "U07E9GKUZ",
        "text": "yup",
        "ts": "1470050623.000425"
    },
    {
        "type": "message",
        "user": "U03V2PZUB",
        "text": "Just found this.",
        "ts": "1470050625.000426"
    },
    {
        "type": "message",
        "user": "U03V2PZUB",
        "text": "_something that screenshot is missing out is that the reason behind the `animated` variable is that I want to prevent the animation from running twice_",
        "edited": {
            "user": "U03V2PZUB",
            "ts": "1470050720.000000"
        },
        "ts": "1470050704.000427"
    },
    {
        "type": "message",
        "user": "U03V2PZUB",
        "text": "Ok, I think that derived-state page answered my question on what ember-concurrency does",
        "ts": "1470050996.000431"
    },
    {
        "type": "message",
        "user": "U07E9GKUZ",
        "text": "this is the best explanation from machty himself: <https:\/\/emberway.io\/ember-concurrency-the-solution-to-so-many-problems-you-never-knew-you-had-cce6d7731ba9#.t9b5souhq>",
        "attachments": [
            {
                "service_name": "Medium",
                "title": "ember-concurrency: the solution to so many problems you never knew you had \u2014 The Ember Way",
                "title_link": "https:\/\/emberway.io\/ember-concurrency-the-solution-to-so-many-problems-you-never-knew-you-had-cce6d7731ba9#.t9b5souhq",
                "text": "ember-concurrency is an Ember.js Addon that strikes at the root of countless challenging, error-prone, boilerplate, and mundane aspects of\u2026",
                "fallback": "Medium: ember-concurrency: the solution to so many problems you never knew you had \u2014 The Ember Way",
                "image_url": "https:\/\/cdn-images-1.medium.com\/max\/1200\/1*CmowUsbDaAof70Vor4Z-zQ.png",
                "fields": [
                    {
                        "title": "Reading time",
                        "value": "11 min read",
                        "short": true
                    }
                ],
                "ts": 1456711075,
                "from_url": "https:\/\/emberway.io\/ember-concurrency-the-solution-to-so-many-problems-you-never-knew-you-had-cce6d7731ba9#.t9b5souhq",
                "image_width": 445,
                "image_height": 250,
                "image_bytes": 285404,
                "service_icon": "https:\/\/cdn-images-1.medium.com\/fit\/c\/152\/152\/1*7OgJKkLsNG4t7_Cyd-7wvw.png",
                "id": 1
            }
        ],
        "ts": "1470051069.000432"
    },
    {
        "type": "message",
        "user": "U03V2PZUB",
        "text": "<@U07E9GKUZ>: Perfect. Thanks. I'm just dipping my toe into using ember-concurrency more so this is dead handy.",
        "ts": "1470051170.000434"
    },
    {
        "type": "message",
        "user": "U07E9GKUZ",
        "text": "glad to be of help :slightly_smiling_face: also I collected all examples on a single page here: <http:\/\/concurred.herokuapp.com\/> (source: <https:\/\/github.com\/Arkham\/concurred>)",
        "edited": {
            "user": "U07E9GKUZ",
            "ts": "1470051442.000000"
        },
        "ts": "1470051416.000435"
    },
    {
        "type": "message",
        "user": "U03V2PZUB",
        "text": "<@U07E9GKUZ>: I think the route I'm going to go down with the pesky \"animated\" variable is actually store the task instead so on teardown I can cancel it too.",
        "ts": "1470051538.000437"
    },
    {
        "type": "message",
        "user": "U07E9GKUZ",
        "text": "no need to cancel :slightly_smiling_face:",
        "ts": "1470051552.000438"
    },
    {
        "type": "message",
        "user": "U07E9GKUZ",
        "text": "all tasks are automatically canceled on parent destruction",
        "ts": "1470051562.000439"
    },
    {
        "type": "message",
        "user": "U03V2PZUB",
        "text": "<@U07E9GKUZ>: Really? Thats awesome.",
        "ts": "1470051616.000440"
    },
    {
        "type": "message",
        "user": "U03V2PZUB",
        "text": "&gt; or because the task's host object was destroyed",
        "ts": "1470051618.000441"
    },
    {
        "type": "message",
        "user": "U03V2PZUB",
        "text": "This library, wow.",
        "ts": "1470051630.000442"
    },
    {
        "type": "message",
        "user": "U03V2PZUB",
        "text": "So much :heart:",
        "ts": "1470051648.000443"
    },
    {
        "type": "message",
        "user": "U03V2PZUB",
        "text": "<@U07E9GKUZ>:  :point_left::skin-tone-2: :beer: Thanks your help!",
        "edited": {
            "user": "U03V2PZUB",
            "ts": "1470051722.000000"
        },
        "ts": "1470051710.000444"
    },
    {
        "type": "message",
        "user": "U07E9GKUZ",
        "text": "you got it! :emberlondon:",
        "ts": "1470053971.000446"
    },
    {
        "type": "message",
        "user": "U047GTU64",
        "text": "has anyone got any issues using test helpers in a component integration test?",
        "ts": "1470055153.000447"
    },
    {
        "type": "message",
        "user": "U047GTU64",
        "text": "mine dont seem to be defined",
        "ts": "1470055158.000448"
    },
    {
        "type": "message",
        "user": "U047GTU64",
        "text": "and I\u2019ve imported them on `start-app` as guides suggest",
        "ts": "1470055167.000449"
    },
    {
        "type": "message",
        "user": "U07E9GKUZ",
        "text": "they aren\u2019t available there usually I\u2019m afraid",
        "ts": "1470057350.000450"
    },
    {
        "type": "message",
        "user": "U07E9GKUZ",
        "text": "but the plan is to make them available everywhere :slightly_smiling_face:",
        "ts": "1470057396.000451"
    },
    {
        "type": "message",
        "user": "U07E9GKUZ",
        "text": "that said, there are some hacks to get them to work",
        "ts": "1470057407.000452"
    },
    {
        "type": "message",
        "user": "U07E9GKUZ",
        "text": "but you lose most of the advantages of component integration testing",
        "ts": "1470057418.000453"
    },
    {
        "type": "message",
        "user": "U07E9GKUZ",
        "text": "such as \u201cnot having to start the whole damn app\"",
        "ts": "1470057427.000454"
    },
    {
        "type": "message",
        "user": "U07E9GKUZ",
        "text": ":smile:",
        "ts": "1470057428.000455"
    },
    {
        "type": "message",
        "user": "U03V8V08M",
        "text": "you can use `wait`",
        "ts": "1470057436.000456"
    },
    {
        "type": "message",
        "user": "U03V8V08M",
        "text": "but that\u2019s about it for now",
        "ts": "1470057443.000457"
    },
    {
        "type": "message",
        "user": "U03V8V08M",
        "text": ":officially:",
        "ts": "1470057451.000458"
    },
    {
        "type": "message",
        "user": "U07E9GKUZ",
        "text": "this is the rfc I was referring to: <https:\/\/github.com\/rwjblue\/rfcs\/blob\/42\/text\/0000-grand-testing-unification.md>",
        "attachments": [
            {
                "service_name": "GitHub",
                "title": "rwjblue\/rfcs",
                "title_link": "https:\/\/github.com\/rwjblue\/rfcs\/blob\/42\/text\/0000-grand-testing-unification.md",
                "text": "rfcs - RFCs for changes to Ember",
                "fallback": "GitHub: rwjblue\/rfcs",
                "thumb_url": "https:\/\/avatars2.githubusercontent.com\/u\/12637?v=3&s=400",
                "from_url": "https:\/\/github.com\/rwjblue\/rfcs\/blob\/42\/text\/0000-grand-testing-unification.md",
                "thumb_width": 150,
                "thumb_height": 150,
                "service_icon": "https:\/\/github.com\/apple-touch-icon.png",
                "id": 1
            }
        ],
        "ts": "1470057487.000459"
    },
    {
        "type": "message",
        "user": "U03V8V08M",
        "text": "I love that rfc",
        "ts": "1470057575.000461"
    },
    {
        "type": "message",
        "user": "U03V8V08M",
        "text": "it\u2019s so dreamy",
        "ts": "1470057577.000462"
    },
    {
        "type": "message",
        "user": "U047GTU64",
        "text": "<@U07E9GKUZ>: I literally decided to move everything to an acceptance test",
        "ts": "1470057974.000463"
    },
    {
        "type": "message",
        "user": "U047GTU64",
        "text": "we need an :officially: emoji <@U03V8V08M> :smile:",
        "ts": "1470057993.000464"
    },
    {
        "type": "message",
        "user": "U03V8V08M",
        "text": "yehuda saying \"seems good\"",
        "ts": "1470058016.000465"
    },
    {
        "type": "message",
        "user": "U047GTU64",
        "text": ":mario:",
        "ts": "1470058355.000466"
    },
    {
        "type": "message",
        "user": "U03V5B7KY",
        "text": "if you do a `findAll` in a parent route, then add a record in a child route\u2026 how are you supposed to update the RecordArray from the parent route?",
        "ts": "1470060118.000467"
    },
    {
        "type": "message",
        "user": "U03V5B7KY",
        "text": "(RecordArray in the `model()` hook)",
        "ts": "1470060129.000468"
    },
    {
        "type": "message",
        "user": "U03V5B7KY",
        "text": "I\u2019m trying to do this \u201cproperly\u201d but it just seems like I should fall back on `peekAll` in a component again\u2026.",
        "ts": "1470060172.000469"
    },
    {
        "type": "message",
        "user": "U047GTU64",
        "text": "<@U03V5B7KY>: pass the model property of the parent template to the child and update that?",
        "ts": "1470060305.000470"
    },
    {
        "type": "message",
        "user": "U047GTU64",
        "text": "shouldnt that just work?",
        "ts": "1470060309.000471"
    },
    {
        "type": "message",
        "user": "U03V5B7KY",
        "text": "Yeah",
        "ts": "1470060315.000472"
    },
    {
        "type": "message",
        "user": "U03V5B7KY",
        "text": "you know what",
        "ts": "1470060317.000473"
    },
    {
        "type": "message",
        "user": "U03V5B7KY",
        "text": "as per usual",
        "ts": "1470060318.000474"
    },
    {
        "type": "message",
        "user": "U03V5B7KY",
        "text": "I\u2019m mucking something else up",
        "ts": "1470060322.000475"
    },
    {
        "type": "message",
        "user": "U03V5B7KY",
        "text": "turns out that `computed.filter` doesn\u2019t listen for all changes on the parent",
        "ts": "1470060335.000476"
    },
    {
        "type": "message",
        "user": "U03V5B7KY",
        "text": "you can\u2019t seem to rely on it to recompute\u2026.",
        "ts": "1470060346.000477"
    },
    {
        "type": "message",
        "user": "U047GTU64",
        "text": "have a plain computed(\u2018model.[]\u2019) ?",
        "ts": "1470060361.000478"
    },
    {
        "type": "message",
        "user": "U03V5B7KY",
        "text": "yeah",
        "ts": "1470060365.000479"
    },
    {
        "type": "message",
        "user": "U047GTU64",
        "text": ":sun_with_face:",
        "ts": "1470060372.000480"
    },
    {
        "type": "message",
        "user": "U03V8V08M",
        "text": "<@U03V5B7KY>: you can also do `computed.filter('foos.@each.bar', function(foo) {})`",
        "ts": "1470060521.000481"
    },
    {
        "type": "message",
        "user": "U03V5B7KY",
        "text": "ah right",
        "ts": "1470060530.000482"
    },
    {
        "type": "message",
        "user": "U03V8V08M",
        "text": "`computed.filterBy` infers the keys, but regular `computed.filter` cannot",
        "edited": {
            "user": "U03V8V08M",
            "ts": "1470060557.000000"
        },
        "ts": "1470060552.000483"
    },
    {
        "type": "message",
        "user": "U03V8V08M",
        "text": "but `computed.filter` does know to only use the bit of the path before any magic token like `@each`",
        "ts": "1470060591.000485"
    },
    {
        "type": "message",
        "user": "U03V5B7KY",
        "text": "you can\u2019t use multiple keys though",
        "ts": "1470060614.000486"
    },
    {
        "type": "message",
        "user": "U03V5B7KY",
        "text": "it would appear at least :smile:",
        "ts": "1470060628.000487"
    },
    {
        "type": "message",
        "user": "U03V5B7KY",
        "text": "I need to check on `isNew` too",
        "ts": "1470060632.000488"
    },
    {
        "type": "message",
        "user": "U03V5B7KY",
        "text": "because I create a new record when you click \u201cadd\u201d but I don\u2019t wnat that showing up because it\u2019s a modal...",
        "ts": "1470060656.000489"
    },
    {
        "type": "message",
        "user": "U040MK408",
        "text": "btw, I encourage all of you to test your stuff in glimmer and report bugs",
        "ts": "1470060763.000490"
    },
    {
        "type": "message",
        "user": "U040MK408",
        "text": "there is a good amount of them",
        "ts": "1470060769.000491"
    },
    {
        "type": "message",
        "user": "U040MK408",
        "text": "I reported 4 already",
        "ts": "1470060773.000492"
    },
    {
        "type": "message",
        "user": "U03V5B7KY",
        "text": "thanks all",
        "ts": "1470060776.000493"
    },
    {
        "type": "message",
        "user": "U040MK408",
        "text": "we all want glimmer out asap",
        "ts": "1470060788.000494"
    },
    {
        "type": "message",
        "user": "U03V8V08M",
        "text": "<@U03V5B7KY>: `computed.filter('foo.@each.{bar,baz}'` doesn\u2019t work?",
        "ts": "1470061569.000495"
    },
    {
        "type": "message",
        "user": "U03V5B7KY",
        "text": "I didn\u2019t try that :smile:",
        "ts": "1470061621.000496"
    },
    {
        "user": "U1X2C12TH",
        "text": "<@U1X2C12TH|ernestoe> has joined the channel",
        "type": "message",
        "subtype": "channel_join",
        "ts": "1470064331.000497"
    }
]