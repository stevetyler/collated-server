[
    {
        "type": "message",
        "user": "U040MK408",
        "text": "it worked for me",
        "ts": "1475137922.000985"
    },
    {
        "type": "message",
        "user": "U040MK408",
        "text": "in unit tests is a bit tricky",
        "ts": "1475137934.000986"
    },
    {
        "type": "message",
        "user": "U043AB2QT",
        "text": "<@U047GTU64> One thing I found useful was wrapping the ember-concurrency timeout function in a service so you can stub it out in a test and fire it as you please. This way you can progress through a looping task at your will and assert things along the way.\n\nI ran this approach past mixonic and he said that, lacking a proper solution baked into ember-concurrency, this was a decent approach.",
        "ts": "1475139424.000987"
    },
    {
        "type": "message",
        "user": "U040MK408",
        "text": "<@U043AB2QT> so you do",
        "ts": "1475146919.000988"
    },
    {
        "type": "message",
        "user": "U040MK408",
        "text": "```\nmyTask: task(function *() {\n  yield this.get('timeoutService').wait(1000);\n})\n```\ninstead of \n```\nmyTask: task(function *() {\n  yield timeout(1000);\n})\n```",
        "edited": {
            "user": "U040MK408",
            "ts": "1475146983.000000"
        },
        "ts": "1475146959.000989"
    },
    {
        "type": "message",
        "user": "U043AB2QT",
        "text": "Yep, something along those lines. I found that super helpful.",
        "ts": "1475146994.000991"
    },
    {
        "type": "message",
        "user": "U040MK408",
        "text": "it's actually pretty clever",
        "ts": "1475147003.000992"
    },
    {
        "type": "message",
        "user": "U040MK408",
        "text": "I like it",
        "ts": "1475147006.000993",
        "reactions": [
            {
                "name": "+1",
                "users": [
                    "U043AB2QT",
                    "U047GTU64"
                ],
                "count": 2
            }
        ]
    },
    {
        "type": "message",
        "user": "U043AB2QT",
        "text": "I have moments of clarity every now and then in between the haze that is generally my mind trying to function :stuck_out_tongue:",
        "ts": "1475147042.000994"
    },
    {
        "type": "message",
        "user": "U047GTU64",
        "text": "<@U043AB2QT>: thanks :) would be cool to bake that one into the library ",
        "ts": "1475149383.000995"
    },
    {
        "type": "message",
        "user": "U03V5B7KY",
        "text": "is there a way to use a passed closure action directly?",
        "ts": "1475158687.000996"
    },
    {
        "type": "message",
        "user": "U03V5B7KY",
        "text": "like",
        "ts": "1475158688.000997"
    },
    {
        "type": "message",
        "user": "U03V5B7KY",
        "text": "`{{parent-component someAction=(action \u201cpublish\u201d)}}`",
        "ts": "1475158706.000998"
    },
    {
        "type": "message",
        "user": "U03V5B7KY",
        "text": "and then in `child-component.hbs`",
        "ts": "1475158712.000999"
    },
    {
        "type": "message",
        "user": "U03V5B7KY",
        "text": "`&lt;a href=\u201d#\u201d {{action someAction}}&gt;Publish&lt;\/a&gt;`",
        "ts": "1475158725.001000"
    },
    {
        "type": "message",
        "user": "U03V5B7KY",
        "text": "that\u2019s what I want to do, but I get a \u201cquoteless path to action helper\u2026\u201d error, which makes me think I\u2019m misunderstanding something :smile:",
        "ts": "1475158745.001001"
    },
    {
        "type": "message",
        "user": "U03V5B7KY",
        "text": "or I\u2019m a numpty and it\u2019s acutally `undefined`",
        "ts": "1475158824.001002"
    },
    {
        "type": "message",
        "user": "U03V5B7KY",
        "text": ":blush: IGNORE ME :smile:",
        "ts": "1475158829.001003"
    }
]