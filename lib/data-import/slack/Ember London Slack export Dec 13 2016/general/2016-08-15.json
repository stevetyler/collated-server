[
    {
        "type": "message",
        "user": "U03V8V08M",
        "text": "Morning gang",
        "ts": "1471251032.000652"
    },
    {
        "type": "message",
        "user": "U03V8V08M",
        "text": "I have finally finished editing and and rendering the EmberCamp vids",
        "ts": "1471251046.000653"
    },
    {
        "type": "message",
        "user": "U03V8V08M",
        "text": "once the west coast wakes up, they\u2019ll hopefully get pushed to YouTube",
        "ts": "1471251059.000654"
    },
    {
        "type": "message",
        "user": "U04TVTLQ8",
        "text": "Looking for a ddau compliant checkbox. Anyone know of one with an onchange action?",
        "ts": "1471251257.000655"
    },
    {
        "type": "message",
        "user": "U03V8V08M",
        "text": "<@U04TVTLQ8>: check out <https:\/\/github.com\/DockYard\/ember-one-way-controls>",
        "attachments": [
            {
                "service_name": "GitHub",
                "title": "DockYard\/ember-one-way-controls",
                "title_link": "https:\/\/github.com\/DockYard\/ember-one-way-controls",
                "text": "ember-one-way-controls - Native one way input",
                "fallback": "GitHub: DockYard\/ember-one-way-controls",
                "thumb_url": "https:\/\/avatars2.githubusercontent.com\/u\/873981?v=3&s=400",
                "from_url": "https:\/\/github.com\/DockYard\/ember-one-way-controls",
                "thumb_width": 400,
                "thumb_height": 400,
                "service_icon": "https:\/\/github.com\/apple-touch-icon.png",
                "id": 1
            }
        ],
        "ts": "1471251413.000656"
    },
    {
        "type": "message",
        "user": "U03V2PZUB",
        "text": "+1 for one-way-controls.",
        "ts": "1471253060.000658"
    },
    {
        "type": "message",
        "user": "U04TVTLQ8",
        "text": "@jswhite niiiiice",
        "ts": "1471253932.000659"
    },
    {
        "type": "message",
        "user": "U03V2PZUB",
        "text": "<@U03V8V08M>: Morning :coffee:",
        "ts": "1471254453.000660"
    },
    {
        "type": "message",
        "user": "U047GTU64",
        "text": "peeps",
        "ts": "1471254512.000661"
    },
    {
        "type": "message",
        "user": "U047GTU64",
        "text": "I have an instance initializer that looks up a component",
        "ts": "1471254530.000662"
    },
    {
        "type": "message",
        "user": "U047GTU64",
        "text": "I know that we only have 1 component of this type rendered at *all* times",
        "ts": "1471254548.000663"
    },
    {
        "type": "message",
        "user": "U047GTU64",
        "text": "however I notices that the property changes I do on the initializer dont work",
        "ts": "1471254562.000664"
    },
    {
        "type": "message",
        "user": "U047GTU64",
        "text": "I bothered to check if they were the same instances",
        "ts": "1471254574.000665"
    },
    {
        "type": "message",
        "user": "U03V2PZUB",
        "text": "<@U04TVTLQ8>: <https:\/\/github.com\/DockYard\/ember-one-way-controls\/blob\/master\/docs\/one-way-input.md#html5-input-types>",
        "attachments": [
            {
                "service_name": "GitHub",
                "title": "DockYard\/ember-one-way-controls",
                "title_link": "https:\/\/github.com\/DockYard\/ember-one-way-controls\/blob\/master\/docs\/one-way-input.md#html5-input-types",
                "text": "ember-one-way-controls - Native one way input",
                "fallback": "GitHub: DockYard\/ember-one-way-controls",
                "thumb_url": "https:\/\/avatars2.githubusercontent.com\/u\/873981?v=3&s=400",
                "from_url": "https:\/\/github.com\/DockYard\/ember-one-way-controls\/blob\/master\/docs\/one-way-input.md#html5-input-types",
                "thumb_width": 400,
                "thumb_height": 400,
                "service_icon": "https:\/\/github.com\/apple-touch-icon.png",
                "id": 1
            }
        ],
        "ts": "1471254674.000666"
    },
    {
        "type": "message",
        "user": "U03V2PZUB",
        "text": "<@U04TVTLQ8>: I overlooked this initially but its a nice little shorthand.\n\n&gt; The {{one-way-input}} has also been subclassed into a named component for each type of text like input. ({{one-way-text}}, {{one-way-number}}, {{one-way-search}}, etc.)",
        "ts": "1471254694.000668"
    },
    {
        "type": "message",
        "user": "U047GTU64",
        "text": "any good orms for node js?",
        "ts": "1471265007.000669"
    },
    {
        "type": "message",
        "user": "U0C5RUAQ4",
        "text": "i like waterline",
        "ts": "1471265039.000670"
    },
    {
        "type": "message",
        "user": "U047GTU64",
        "text": "not using sails",
        "ts": "1471265050.000671"
    },
    {
        "type": "message",
        "user": "U0C5RUAQ4",
        "text": "you can use waterline outside of sails",
        "ts": "1471265059.000672"
    },
    {
        "type": "message",
        "user": "U047GTU64",
        "text": "oh",
        "ts": "1471265067.000673"
    },
    {
        "type": "message",
        "user": "U047GTU64",
        "text": "I\u2019m using sequelize",
        "ts": "1471265074.000674"
    },
    {
        "type": "message",
        "user": "U047GTU64",
        "text": "but can\u2019t help to think there\u2019s got to be something better",
        "ts": "1471265083.000675"
    },
    {
        "type": "message",
        "user": "U0C5RUAQ4",
        "text": "I have a project somewhere that I use waterline, I can opensource it and send it to you",
        "ts": "1471265090.000676"
    },
    {
        "type": "message",
        "user": "U0C5RUAQ4",
        "text": "for rethinkdb I usually use <http:\/\/thinky.io|thinky.io> which is pretty cool",
        "ts": "1471265114.000677"
    },
    {
        "type": "message",
        "user": "U047GTU64",
        "text": "I\u2019m using pg",
        "ts": "1471265362.000678"
    },
    {
        "type": "message",
        "user": "U047GTU64",
        "text": "nah thats fine no worries thanks",
        "ts": "1471265370.000679"
    },
    {
        "type": "message",
        "user": "U0C5RUAQ4",
        "text": "does anyone know if there's a way to add optional dynamic segments to ember? I want three urls to route to the same pod, with different dynamic segments.",
        "ts": "1471269079.000680"
    },
    {
        "type": "message",
        "user": "U0C5RUAQ4",
        "text": "everything works fine when I go to any of the urls, but if I try and use `{{link-to}}`, `this.replaceWith` or `this.transitionTo` it breaks.",
        "ts": "1471269124.000681"
    },
    {
        "type": "message",
        "user": "U0C5RUAQ4",
        "text": "router routes:\n```    this.route('category', { path: '\/category\/:macro\/:parent\/:child'});\n    this.route('category', { path: '\/category\/:macro\/:parent'});\n    this.route('category', { path: '\/category\/:macro'});```\n\nerror: `More context objects were passed than there are dynamic segments for the route: category`",
        "ts": "1471269153.000682"
    },
    {
        "type": "message",
        "user": "U0C5RUAQ4",
        "text": "hmm. only just found this. <https:\/\/github.com\/cibernox\/rfcs\/blob\/router_enhancements\/text\/router-enhancements.md>",
        "attachments": [
            {
                "service_name": "GitHub",
                "title": "cibernox\/rfcs",
                "title_link": "https:\/\/github.com\/cibernox\/rfcs\/blob\/router_enhancements\/text\/router-enhancements.md",
                "text": "rfcs - RFCs for changes to Ember",
                "fallback": "GitHub: cibernox\/rfcs",
                "thumb_url": "https:\/\/avatars1.githubusercontent.com\/u\/265339?v=3&s=400",
                "from_url": "https:\/\/github.com\/cibernox\/rfcs\/blob\/router_enhancements\/text\/router-enhancements.md",
                "thumb_width": 400,
                "thumb_height": 400,
                "service_icon": "https:\/\/github.com\/apple-touch-icon.png",
                "id": 1
            }
        ],
        "ts": "1471270571.000683"
    },
    {
        "type": "message",
        "user": "U040MK408",
        "text": ":hand:",
        "ts": "1471270585.000685"
    },
    {
        "type": "message",
        "user": "U040MK408",
        "text": "tl;dr;",
        "ts": "1471270601.000686"
    },
    {
        "type": "message",
        "user": "U040MK408",
        "text": "soon",
        "ts": "1471270603.000687"
    },
    {
        "type": "message",
        "user": "U0C5RUAQ4",
        "text": "yeah, but I'm rolling out in the next couple of days. I'll refactor my pod structure for temporary compatibility I think",
        "ts": "1471270639.000688"
    },
    {
        "type": "message",
        "user": "U0C5RUAQ4",
        "text": "until this is rolled out",
        "ts": "1471270646.000689"
    },
    {
        "type": "message",
        "user": "U040MK408",
        "text": "I\u2019m not sure if this has already been implemented, but the improvement of the routes is being done in an addon: <https:\/\/github.com\/nathanhammond\/ember-route-recognizer>",
        "attachments": [
            {
                "service_name": "GitHub",
                "title": "nathanhammond\/ember-route-recognizer",
                "title_link": "https:\/\/github.com\/nathanhammond\/ember-route-recognizer",
                "text": "Contribute to ember-route-recognizer development by creating an account on GitHub.",
                "fallback": "GitHub: nathanhammond\/ember-route-recognizer",
                "thumb_url": "https:\/\/avatars1.githubusercontent.com\/u\/20542?v=3&s=400",
                "from_url": "https:\/\/github.com\/nathanhammond\/ember-route-recognizer",
                "thumb_width": 400,
                "thumb_height": 400,
                "service_icon": "https:\/\/github.com\/apple-touch-icon.png",
                "id": 1
            }
        ],
        "ts": "1471270676.000690"
    },
    {
        "type": "message",
        "user": "U040MK408",
        "text": "the initial goal wasn\u2019t to add the features I mention in the RFC",
        "ts": "1471270698.000692"
    },
    {
        "type": "message",
        "user": "U040MK408",
        "text": "but to increase performance",
        "ts": "1471270705.000693"
    },
    {
        "type": "message",
        "user": "U0C5RUAQ4",
        "text": "hmm, interesting.",
        "ts": "1471270719.000694"
    },
    {
        "type": "message",
        "user": "U040MK408",
        "text": "but apparently given that Nathan was already working in the area",
        "ts": "1471270728.000695"
    },
    {
        "type": "message",
        "user": "U040MK408",
        "text": "it is trivial for him to do all",
        "ts": "1471270745.000696"
    },
    {
        "type": "message",
        "user": "U040MK408",
        "text": "at once",
        "ts": "1471270757.000697"
    },
    {
        "type": "message",
        "user": "U0C5RUAQ4",
        "text": "cool. I'll see if there's any way for me to help as well",
        "ts": "1471270779.000698"
    },
    {
        "type": "message",
        "user": "U040MK408",
        "text": "have you read the long post (almost a Ph.D dissertation) that Nathan did about route recognizer?",
        "ts": "1471270800.000699"
    },
    {
        "type": "message",
        "user": "U040MK408",
        "text": "and the end goal?",
        "ts": "1471270807.000700"
    },
    {
        "type": "message",
        "user": "U0C5RUAQ4",
        "text": "nope",
        "ts": "1471270825.000701"
    },
    {
        "type": "message",
        "user": "U040MK408",
        "text": "<http:\/\/www.nathanhammond.com\/route-recognizer>",
        "attachments": [
            {
                "service_name": "nathan hammond",
                "title": "route-recognizer",
                "title_link": "http:\/\/www.nathanhammond.com\/route-recognizer",
                "text": "So you just wrote your first single page application. And hopefully it had real URLs in it. But how did the application get from a URL to knowing which code to execute? And how did that running code know how to generate URLs? The answer is serialization and deserialization.",
                "fallback": "nathan hammond: route-recognizer",
                "thumb_url": "http:\/\/www.nathanhammond.com\/apple-touch-icon-114x114-precomposed.png",
                "ts": 1468835630,
                "from_url": "http:\/\/www.nathanhammond.com\/route-recognizer",
                "thumb_width": 114,
                "thumb_height": 114,
                "service_icon": "http:\/\/www.nathanhammond.com\/favicon.ico",
                "id": 1
            }
        ],
        "ts": "1471270949.000702"
    },
    {
        "type": "message",
        "user": "U0C5RUAQ4",
        "text": "perfect, wil read through this now",
        "ts": "1471270998.000704"
    },
    {
        "type": "message",
        "user": "U040MK408",
        "text": "at the end the idea is to precompute in compile time all the possible states of the Non-deterministic Finite Automata behind RouteRecognizer",
        "ts": "1471271020.000705"
    },
    {
        "type": "message",
        "user": "U040MK408",
        "text": "and ship that in the build",
        "edited": {
            "user": "U040MK408",
            "ts": "1471271033.000000"
        },
        "ts": "1471271028.000706"
    },
    {
        "type": "message",
        "user": "U040MK408",
        "text": "instead of your definitions + the library that build it",
        "ts": "1471271048.000708"
    },
    {
        "type": "message",
        "user": "U0C5RUAQ4",
        "text": "that's smart, but not sure how it will be able to handle multiple optional dynamic parameters.",
        "ts": "1471271088.000709"
    },
    {
        "type": "message",
        "user": "U040MK408",
        "text": "with the NFA",
        "ts": "1471271103.000710"
    },
    {
        "type": "message",
        "user": "U040MK408",
        "text": "it\u2019s quite smart",
        "ts": "1471271114.000711"
    },
    {
        "type": "message",
        "user": "U0C5RUAQ4",
        "text": "I'll have a read through the article. it probably explains things in a lot more detail :stuck_out_tongue:",
        "ts": "1471271122.000712"
    },
    {
        "type": "message",
        "user": "U0C5RUAQ4",
        "text": "thanks man!",
        "ts": "1471271140.000713"
    },
    {
        "type": "message",
        "user": "U040MK408",
        "text": "and apparently, in a first implementation this state object will be json (which is already faster to parse than JS)",
        "edited": {
            "user": "U040MK408",
            "ts": "1471271155.000000"
        },
        "ts": "1471271147.000714"
    },
    {
        "type": "message",
        "user": "U040MK408",
        "text": "but it could be compresed even more to a Uint8Array",
        "ts": "1471271175.000716"
    },
    {
        "type": "message",
        "user": "U0C5RUAQ4",
        "text": "interesting. That should be a lot faster than having to parse javascript",
        "ts": "1471271237.000717"
    },
    {
        "type": "message",
        "user": "U0C5RUAQ4",
        "text": "so, for now, breaking all the route code into a mixin and sharing that across all the necessary pods should do the job",
        "ts": "1471271372.000718"
    },
    {
        "type": "message",
        "user": "U0ASPMFPS",
        "text": "<@U047GTU64>: there is Bookshelf ORM which is built on top of knex",
        "ts": "1471271414.000719"
    },
    {
        "type": "message",
        "user": "U06BGNMBL",
        "text": "with the advantage that knex is pretty powerful in itself, if you need to drop down a layer",
        "ts": "1471275688.000720"
    },
    {
        "type": "message",
        "user": "U04TVTLQ8",
        "text": "Here's an interesting challenge. Im doing some IoT fog stuff in ember an have a service that talks to the fog. When testing I want to mock the service and have a get and set testhelper that inject data into the fog or read it back to use in acceptance tests. Question is, how does a testhelper get hold of a service object to set it up? I have got as far as registering my mock but now I want the helper to call a method on the mock to push data in. ",
        "ts": "1471314164.000721"
    }
]